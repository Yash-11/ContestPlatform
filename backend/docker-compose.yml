
services:
  app:
    image: aysh1/contestplatform:1.1
    container_name: contestplatform
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: broker:9092
      AllowedOrigin: https://venerable-pavlova-d4a4c0.netlify.app/
      DOCKER_HOST: unix:///var/run/docker.sock  # Set the Docker host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # Mount the Docker socket
      - /tmp:/tmp
    privileged: true
    ports:
      - "8080:8080"
    depends_on:
      - broker
    networks:
      - kafka-net

  broker:
    image: apache/kafka:3.8.0
    hostname: broker
    container_name: broker
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      GROUP_ID: "contest-submissions"
      KAFKA_CREATE_TOPICS: "submissions"
    networks:
      - kafka-net


networks:
  kafka-net:
    


# version: '3'
# services:
#   app:
#     image: aysh1/contestplatform:1.1
#     depends_on:
#       - kafka
#       - redis
#     environment:
#       - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092

#   kafka:
#     image: apache/kafka:3.8.0
#     ports:
#       - "9092:9092"
#     environment:
#       KAFKA_PROCESS_ROLES: broker,controller
#       KAFKA_NODE_ID: 1
#       KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
#       KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
#       KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT"
#       KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
#       KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
#       KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#     #   KAFKA_LISTENERS: "PLAINTEXT://0.0.0.0:9092"
#       # KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
    
#   redis:
#     image: redis/redis-stack:latest
#     ports:
#       - "6379:6379"
#       - "8001:8001"

# version: '3'
# services:
#   app:
#     image: myapp
#     environment:
#       - KAFKA_BROKER=kafka:9092
#       - REDIS_HOST=redis
#     depends_on:
#       - kafka
#       - redis

#   kafka:
#     image: bitnami/kafka
#     ports:
#       - "9092:9092"
#     environment:
#       - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
  
#   redis:
#     image: redis:latest
#     ports:
#       - "6379:6379"
